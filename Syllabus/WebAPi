Web API 

WCF - cross protocol support. Single service can serve 2 clients java n .net with different protocols like FTP n HTTP.
Only support HTTP protocol. Returns data instead of View(in MVC)

REST Constraints -
- ClientServer
- Stateless
- Cacheable - (for the data which is not changable over a period of time, performance improv.)
- Uniform Interface (Resource - dataentities,)
- 

Evolution of API - (initially there were different methods exposed for individual operation)
Then HTTP evolution (GET, POST, PUT etc.)

Demo - Get, Put, Post methods


Content Negotiation - 
	-client chooses the data format , JsonFormatters, XmlFormatters,
	-can have multiple formatters in Accept header.( application/xml;q=0.9, Application/json; q=0.8)

Routing - 
	- Convention Based
	- Attribute based
- Routing by verbs
- Routing by action (Non-Action)

Attribute Routing -
	- need - (when sub resources are accessing)
	- Attributes - variations
	- RoutePrefix
	- Constraints

IHttpRouteData  - Dictionary of controller and action 
eg. For the URI path "api/products", the route dictionary will contain:
	controller: "products"
	category: "all"

	For "api/products/toys/123", however, the route dictionary will contain:
	controller: "products"
	category: "toys"
	id: "123"

Parameter Binding -
 - query parameters
 - req body parameters
 - FromUri and FromBody

Return types - 
 - void
 - primitive and complex
 - httpresponsemessage
 - IActionResult

Data Formats
 - MediaType - type/subtype eg. application/json, text/html, image/jpeg
 - For response which client expects , use Accept in header
 - For request which client sends, use content-type






Web API Pipeline 
( low level handler and Controller pipeline)
1. Request Delegate Handlers - Global
							 - Per Route
2. HttpRouteDispatcher  
3. HttpControllerDispatcher - Final Stop
4. Controller Selector, Activator
5. ApiController - HttpActionSelectior, descriptor (to decide the actions to be picked up)
6. Filters - Types  - Authentication
					- Autherization
					- Action
					- Exception
